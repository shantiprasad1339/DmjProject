import {
  require_react
} from "./chunk-JFTBQ7A7.js";
import {
  __toESM
} from "./chunk-AC2VUBZ6.js";

// node_modules/@restart/hooks/esm/useCommittedRef.js
var import_react = __toESM(require_react());
function useCommittedRef(value) {
  var ref = (0, import_react.useRef)(value);
  (0, import_react.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref;
}
var useCommittedRef_default = useCommittedRef;

// node_modules/@restart/hooks/esm/useEventCallback.js
var import_react2 = __toESM(require_react());
function useEventCallback(fn) {
  var ref = useCommittedRef_default(fn);
  return (0, import_react2.useCallback)(function() {
    return ref.current && ref.current.apply(ref, arguments);
  }, [ref]);
}

// node_modules/@restart/hooks/esm/useUpdatedRef.js
var import_react3 = __toESM(require_react());
function useUpdatedRef(value) {
  var valueRef = (0, import_react3.useRef)(value);
  valueRef.current = value;
  return valueRef;
}

// node_modules/@restart/hooks/esm/useWillUnmount.js
var import_react4 = __toESM(require_react());
function useWillUnmount(fn) {
  var onUnmount = useUpdatedRef(fn);
  (0, import_react4.useEffect)(function() {
    return function() {
      return onUnmount.current();
    };
  }, []);
}

// node_modules/@restart/hooks/esm/useMounted.js
var import_react5 = __toESM(require_react());
function useMounted() {
  var mounted = (0, import_react5.useRef)(true);
  var isMounted = (0, import_react5.useRef)(function() {
    return mounted.current;
  });
  (0, import_react5.useEffect)(function() {
    mounted.current = true;
    return function() {
      mounted.current = false;
    };
  }, []);
  return isMounted.current;
}

// node_modules/@restart/hooks/esm/usePrevious.js
var import_react6 = __toESM(require_react());
function usePrevious(value) {
  var ref = (0, import_react6.useRef)(null);
  (0, import_react6.useEffect)(function() {
    ref.current = value;
  });
  return ref.current;
}

// node_modules/@restart/hooks/esm/useIsomorphicEffect.js
var import_react7 = __toESM(require_react());
var isReactNative = typeof global !== "undefined" && // @ts-ignore
global.navigator && // @ts-ignore
global.navigator.product === "ReactNative";
var isDOM = typeof document !== "undefined";
var useIsomorphicEffect_default = isDOM || isReactNative ? import_react7.useLayoutEffect : import_react7.useEffect;

export {
  useIsomorphicEffect_default,
  useCommittedRef_default,
  useEventCallback,
  useMounted,
  useWillUnmount,
  usePrevious
};
//# sourceMappingURL=chunk-HHVZYOHQ.js.map
